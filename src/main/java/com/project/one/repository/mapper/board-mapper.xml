<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.one.repository.mapper.BoardMapper">
	<insert id="insert" parameterType="BoardVO">
		INSERT INTO BOARD(TITLE,WRITER,CONTENT,READ_COUNT,WRITE_DATE,LIST,LEVEL,RIDX,CATEGORY,OPEN) 
		VALUES(#{title},#{writer},#{content},#{read_count},#{write_date},#{list},#{level},#{ridx},#{category},#{open})
	</insert>
	
	<select id="maxList" resultType="int">
		SELECT MAX(LIST) FROM BOARD WHERE NOT OPEN=2 
	</select>
	
	<select id="selectTotalCount" resultType="int">
		SELECT COUNT(*) FROM BOARD WHERE NOT OPEN=2 
	</select>
	
	<select id="selectIdCount" resultType="int">
		SELECT COUNT(*) FROM BOARD WHERE NOT OPEN=2 AND NOT OPEN=3 WRITER=#{loginId}
	</select>	
	
	<select id="select" parameterType="int" resultType="BoardVO">
		SELECT * FROM BOARD WHERE BOARD_NUM=#{board_num} AND NOT OPEN=2 
	</select>
	
	<select id="replyList" resultType="int">
		SELECT LIST FROM BOARD WHERE BOARD_NUM=#{board_num} AND NOT OPEN=2 
	</select>
	
	<select id="replyLevel" resultType="int">
		SELECT LEVEL FROM BOARD WHERE BOARD_NUM=#{board_num} AND NOT OPEN=2 
	</select>
	
	<select id="replyRidx" resultType="int">
		SELECT RIDX FROM BOARD WHERE BOARD_NUM=#{board_num} AND NOT OPEN=2 
	</select>
	
	<select id="replyExistCheck" resultType="int">
		SELECT COUNT(*) FROM BOARD WHERE LIST=#{list} AND LEVEL=#{level} AND RIDX=#{ridx} AND NOT OPEN=2 
	</select>
	
	<select id="listCount" resultType="int">
		SELECT COUNT(LIST) FROM BOARD WHERE LIST=#{list} AND NOT OPEN=2 
	</select>
	
	<select id="searchTitleCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE TITLE LIKE CONCAT('%',#{keyword},'%') AND NOT OPEN=2 
	</select>
	
	<select id="searchContentCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE CONTENT LIKE CONCAT('%',#{keyword},'%') AND NOT OPEN=2 
	</select>
	
	<select id="searchTitleContentCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE (TITLE LIKE CONCAT('%',#{keyword},'%') OR CONTENT LIKE CONCAT('%',#{keyword},'%'))
		 AND NOT OPEN=2    
	</select>		
	
	<select id="searchWriterCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE WRITER LIKE #{keyword} AND NOT OPEN=2  
	</select>	
	
	<select id="searchCategoryTitleCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE TITLE LIKE CONCAT('%',#{keyword},'%') AND CATEGORY=#{category} AND NOT OPEN=2  
	</select>
	
	<select id="searchCategoryContentCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE CONTENT LIKE CONCAT('%',#{keyword},'%') AND CATEGORY=#{category} AND NOT OPEN=2   
	</select>
	
	<select id="searchCategoryTitleContentCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE (TITLE LIKE CONCAT('%',#{keyword},'%') OR CONTENT LIKE CONCAT('%',#{keyword},'%'))
		AND CATEGORY=#{category} AND NOT OPEN=2     
	</select>		
	
	<select id="searchCategoryWriterCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE WRITER LIKE #{keyword} AND CATEGORY=#{category} AND NOT OPEN=2   
	</select>		
	
	<select id="searchCategoryCount" resultType="int">
		SELECT COUNT(*) FROM BOARD 
		WHERE CATEGORY LIKE #{category} AND NOT OPEN=2  
	</select>
	
	<select id="selectList" resultType="BoardVO">
		SELECT BOARD.*, COUNT(COMMENT.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD LEFT JOIN COMMENT 
		ON BOARD.BOARD_NUM=COMMENT.BOARD_NUM 
		GROUP BY BOARD.BOARD_NUM 
		HAVING NOT BOARD.OPEN=2 
		ORDER BY BOARD.LIST DESC, BOARD.RIDX ASC 
		LIMIT #{startRow}, #{count}
	</select>
	
	<select id="searchTitle" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND 
		B.TITLE LIKE CONCAT('%',#{keyword},'%') 
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}
	</select>
	
	<select id="searchContent" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND 
		B.CONTENT LIKE CONCAT('%',#{keyword},'%') 
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}
	</select>
	
	<select id="searchTitleContent" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND 
		(B.TITLE LIKE CONCAT('%',#{keyword},'%') OR CONTENT LIKE CONCAT('%',#{keyword},'%'))
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}	
	</select>
	
	<select id="searchWriter" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND 
		B.WRITER LIKE #{keyword} 
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}
	</select>
	
	<select id="searchCategory" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND 
		B.CATEGORY LIKE #{category} 
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}	
	</select>	
	
	<select id="searchCategoryTitle" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND B.CATEGORY=#{category} AND 
		B.TITLE LIKE CONCAT('%',#{keyword},'%') 
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}	
	</select>
	
	<select id="searchCategoryContent" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND B.CATEGORY=#{category} AND 
		B.CONTENT LIKE CONCAT('%',#{keyword},'%') 
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}		
	</select>
	
	<select id="searchCategoryTitleContent" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND B.CATEGORY=#{category} AND 
		(B.TITLE LIKE CONCAT('%',#{keyword},'%') OR CONTENT LIKE CONCAT('%',#{keyword},'%')) 
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}		
	</select>
	
	<select id="searchCategoryWriter" resultType="BoardVO">
		SELECT B.*, COUNT(C.BOARD_NUM) AS COMMENT_COUNT 
		FROM BOARD AS B LEFT JOIN COMMENT AS C 
		ON B.BOARD_NUM=C.BOARD_NUM 
		GROUP BY B.BOARD_NUM 
		HAVING NOT B.OPEN=2 AND B.CATEGORY=#{category} AND 
		B.WRITER LIKE #{keyword} 
		ORDER BY B.LIST DESC, B.RIDX ASC 
		LIMIT #{startRow}, #{count}		
	</select>	
	
	<update id="update" parameterType="BoardVO">
		UPDATE BOARD SET TITLE=#{title}, CONTENT=#{content}, WRITE_DATE=#{write_date} 
		WHERE BOARD_NUM=#{board_num}
	</update>
	
	<update id="updateOpen" parameterType="int">
		UPDATE BOARD SET OPEN=#{open} 
		WHERE BOARD_NUM=#{board_num}
	</update>
	
	<update id="updateReadCount" parameterType="int">
		UPDATE BOARD SET READ_COUNT=READ_COUNT+1 WHERE BOARD_NUM=#{board_num}
	</update>
	
	<delete id="delete" parameterType="int">
		DELETE FROM BOARD WHERE BOARD_NUM=#{board_num}
	</delete>
	
	<select id="countRidx" resultType="int">
		<![CDATA[
		SELECT COUNT(RIDX) FROM BOARD 
		WHERE LIST=#{list} AND RIDX > #{ridx} AND LEVEL <= #{level}
		]]>
	</select>
	
	<select id="inputRidx" resultType="int">
		<![CDATA[
		SELECT MIN(RIDX) FROM BOARD 
		WHERE LIST=#{list} AND RIDX > #{ridx} AND LEVEL <= #{level}
		]]>
	</select>
	
	<select id="inputMaxRidx" resultType="int">
		SELECT MAX(RIDX)+1 FROM BOARD WHERE LIST=#{list} AND NOT OPEN=2 
	</select>
	
	<update id="increaseRidx" parameterType="int">
		UPDATE BOARD SET RIDX=RIDX+1 WHERE LIST=#{list} AND RIDX>=#{ridx}
	</update>	
</mapper>